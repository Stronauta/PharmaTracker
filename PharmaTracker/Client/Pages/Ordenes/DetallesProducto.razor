@page "/detallesproducto/{ProductoId:int}"
@inject HttpClient httpClient
@inject NotificationService notificationService

<div class="container px-4 px-lg-5 my-5">
	@if (producto != null)
	{
		<div class="row gx-5 gx-lg-5 align-items-center">
			<div class="col-md-6">
				@if (String.IsNullOrEmpty(producto.Imagen))
			{
            producto.Imagen = "https://cdn.discordapp.com/attachments/915304593485869137/1180543699701207131/image-not-found-icon.png?ex=657dcdff&is=656b58ff&hm=3faef98b0bff2c33cfdac8c83b78540ce6d0a95a3ac19f624882df5646f2e82e&";
			}
                <img class="media-img-big" src="@producto.Imagen" style="width:100%;">
			</div>
			<div class="col-md-6">
				<h1 class="display-5 fw-bolder">@producto.NombreProducto</h1>
				<div class="fs-5 mb-5">
						<span>RD$@producto.Precio</span>
				</div
					<p class="lead">@producto.Descripcion</p>
				<div class="d-flex">
					<button class="btn btn-outline-dark flex-shrink-0 me-3" type="button">
							<i class="oi oi-cart me-1"></i>
                            Agregar al carrito
					</button>
					<a class="btn btn-outline-dark flex-lg-shrink-0" href="O_Productos">
							<i class="oi oi-cart me-1"></i>
                            Volver
					</a>
				</div
			</div>
		</div>
	}
    else
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }



</div>

@code {
	[Parameter]
	public int ProductoId { get; set; }
	public Productos producto { get; set; } = new Productos();


	protected override async Task OnInitializedAsync()
	{
		if (ProductoId > 0)
		{
			this.producto.ProductoId = ProductoId;
			await Buscar();
		}
	}
	public async Task Buscar()
	{
		var productoNotNull = (await httpClient.GetFromJsonAsync<List<Productos>>($"api/Productos")).ToList().Any(p => p.ProductoId == producto.ProductoId);
		if (productoNotNull)
		{
			var productoEncontrado = await httpClient.GetFromJsonAsync<Productos>($"api/Productos/{producto.ProductoId}");
			if (productoEncontrado != null)
			{
				this.producto = productoEncontrado;
				StateHasChanged();
			}
		}
		else
		{
			var mensaje = new NotificationMessage
				{
					Severity = NotificationSeverity.Warning,
					Summary = "Error",
					Detail = "No se encontro el Producto",
					Duration = 5_000
				};
			notificationService.Notify(mensaje);
		}
	}
}
